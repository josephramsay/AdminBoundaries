[source]
base_uri = http://maps.stats.govt.nz/wss/service/arcgis1/guest/Boundaries

[database]
name = <dbname (autocomplete if omitted)>
rolename = <role?>
host = <database host>
user = <database user>
port = <database port>
password = <database user password>
schema = <temp_import_schema>
originschema = <destination schema>

[user]
list = <user list as csv, email recipients>
domain = linz.govt.nz
smtp = <smtp server>
link =

[layer]
name = territorial_authority
output_srid = 4167
geom_column = shape
create_grid = True
grid_res = 0.05
shift_geometry = True

[connection]
ftphost = <ftphost>
ftpport = <ftpport>
ftpuser = <ftpuser>
ftppass = <ftppass>
ftppath = <ftppath>

[meshblock]
filepattern = Stats_Meshblock_concordance_(\d{8}).zip
localpath = .
colmap = {
    "statsnz_meshblock":{
    "table":"meshblock",
    "rename":[{"old":"mb_code","new":"code"},{"old":"geom","new":"shape"}],
    "drop":["ogc_fid"],
    "primary":"code",
    "geom":"shape",
    "srid":"4167",
    "permission":["user1","user2"]
    },
    "statsnz_ta":{
    "table":"territorial_authority",
    "rename":[{"old":"geom","new":"shape"}],
    "drop":["ta_code"],
    "primary":"ogc_fid",
    "geom":"shape",
    "srid":"4167",
    "permission":["user1","user2"],
    "grid":{"geocol":"shape","res":"10"}
    },
    "meshblock_concordance":{
    "table":"meshblock_concordance",
    "primary":"meshblock",
    "permission":["user1","user2"]
    }
    }

[nzlocalities]
filepath = /mnt/geo_dat/NZ Localities/
filename = nz_localities
colmap = {
    "nz_locality":{
    "table":"nz_locality",
    "rename":[{"old":"geom","new":"shape"}],
    "drop":["ogc_fid"],
    "cast":[{"cast":"id","type":"integer"}],
    "primary":"id",
    "geom":"shape",
    "srid":"4167",
    "permission":["user1","user2"]
    }
    }

[optional]
functions = ["aims_stage.fnreferencedataupdatelocality('referencedata.maintainer')",
    "aims_stage.fnreferencedataupdatemeshblock('referencedata.maintainer')"]

[validation]
data = [('select count(*) from meshblock where length(code)>7','0'),]
spatial = [{'',''},]


